// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace MicroBlogger.Api.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PostsDto : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The created property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Created { get; set; }
#nullable restore
#else
        public string Created { get; set; }
#endif
        /// <summary>The createdBy property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedBy { get; set; }
#nullable restore
#else
        public string CreatedBy { get; set; }
#endif
        /// <summary>The imageUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ImageUrl { get; set; }
#nullable restore
#else
        public string ImageUrl { get; set; }
#endif
        /// <summary>The latitude property</summary>
        public double? Latitude { get; set; }
        /// <summary>The longtuide property</summary>
        public double? Longtuide { get; set; }
        /// <summary>The message property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Message { get; set; }
#nullable restore
#else
        public string Message { get; set; }
#endif
        /// <summary>The postId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PostId { get; set; }
#nullable restore
#else
        public string PostId { get; set; }
#endif
        /// <summary>The tempImageUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TempImageUrl { get; set; }
#nullable restore
#else
        public string TempImageUrl { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::MicroBlogger.Api.Client.Models.PostsDto"/> and sets the default values.
        /// </summary>
        public PostsDto()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::MicroBlogger.Api.Client.Models.PostsDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::MicroBlogger.Api.Client.Models.PostsDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::MicroBlogger.Api.Client.Models.PostsDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "created", n => { Created = n.GetStringValue(); } },
                { "createdBy", n => { CreatedBy = n.GetStringValue(); } },
                { "imageUrl", n => { ImageUrl = n.GetStringValue(); } },
                { "latitude", n => { Latitude = n.GetDoubleValue(); } },
                { "longtuide", n => { Longtuide = n.GetDoubleValue(); } },
                { "message", n => { Message = n.GetStringValue(); } },
                { "postId", n => { PostId = n.GetStringValue(); } },
                { "tempImageUrl", n => { TempImageUrl = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("created", Created);
            writer.WriteStringValue("createdBy", CreatedBy);
            writer.WriteStringValue("imageUrl", ImageUrl);
            writer.WriteDoubleValue("latitude", Latitude);
            writer.WriteDoubleValue("longtuide", Longtuide);
            writer.WriteStringValue("message", Message);
            writer.WriteStringValue("postId", PostId);
            writer.WriteStringValue("tempImageUrl", TempImageUrl);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
